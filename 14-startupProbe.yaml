apiVersion: apps/v1
kind: Deployment
metadata:
  name: "poc-pipeline"
  labels:
    app: "poc-pipeline"
spec:
  selector:
    matchLabels:
      app: "poc-pipeline"
  replicas: 3
  template:
    metadata:
      name: "poc-pipeline"
      labels:
        app: "poc-pipeline"
      annotations:
        kubectl.kubernetes.io/restartedAt: $(date +%s)
    spec:
      containers:
        - name : "poc-pipeline"
          image: "tbaragao/poc-pipeline:v6.4"

          startupProbe:
            httpGet:
              path: /healthz
              port: 8080 # Porta do container, não é a porta do serviço
              httpHeaders:
              - name: x-api-key
                value: MyAwesomeApiKey
            periodSeconds: 3
            failureThreshold: 30 # Limite de erros para reiniciar o container
            timeoutSeconds: 1 # Timeout para considerar erro, lembrar que quando for integrada (consumir banco) precisa ser menos conservador
            successThreshold: 1 # Quantidade de testes que devem ser realizadas para considerar que está Ok
            initialDelaySeconds: 1 # aguarda 2 segundos até iniciar a verificar se o container já iniciou

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080 # Porta do container, não é a porta do serviço
              httpHeaders:
              - name: x-api-key
                value: MyAwesomeApiKey
            periodSeconds: 2
            failureThreshold: 3 # Limite de erros para reiniciar o container
            timeoutSeconds: 1 # Timeout para considerar erro, lembrar que quando for integrada (consumir banco) precisa ser menos conservador
            successThreshold: 1 # Quantidade de testes que devem ser realizadas para considerar que está Ok
          
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080 #Porta do container não é a porta do service
              httpHeaders:
              - name: x-api-key
                value: MyAwesomeApiKey
            periodSeconds: 5 # De quanto em quanto tempo para verificar
            failureThreshold: 3 # Limite de erros para reiniciar o container
            timeoutSeconds: 1 # Timeout para considerar erro, lembrar que quando for integrada (consumir banco) precisa ser menos conservador
            successThreshold: 1 # Quantidade de testes que devem ser realizadas para considerar que está Ok

          envFrom:
          - configMapRef:
              name: poc-pipeline-env
          - secretRef:
              name: poc-pipeline-secret
          volumeMounts:
            - mountPath: "/app/Source"
              name: config
      volumes:
        - name: config
          configMap:
            name: configmap-content
            items:
            - key: "fileContent"
              path: "disclaimer.txt"
