apiVersion: apps/v1
kind: Deployment
metadata:
  name: "poc-pipeline"
  labels:
    app: "poc-pipeline"
spec:
  selector:
    matchLabels:
      app: "poc-pipeline"
  replicas: 3
  template:
    metadata:
      name: "poc-pipeline"
      labels:
        app: "poc-pipeline"
      annotations:
        kubectl.kubernetes.io/restartedAt: $(date +%s)
    spec:
      containers:
        - name : "poc-pipeline"
          image: "tbaragao/poc-pipeline:v6.10"

          resources:
            requests: # Define a quantidade minima de resources necessários para a aplicacao rodar 
              cpu: 100m # vCPU = 1000 milicores - Esse valor pode ser em milicores ou em %
              memory: 21Mi
            limits: # Define o máximo da quantidade de resources necessario que a aplicação pode chegar
              cpu: 500m
              memory: 26Mi

          # startupProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080 # Porta do container, não é a porta do serviço
          #     httpHeaders:
          #     - name: x-api-key
          #       value: MyAwesomeApiKey
          #   initialDelaySeconds: 5 # aguarda 2 segundos até iniciar a verificar se o container já iniciou
          #   periodSeconds: 5
          #   timeoutSeconds: 6 # Timeout para considerar erro, lembrar que quando for integrada (consumir banco) precisa ser menos conservador
          #   failureThreshold: 30 # Limite de erros para reiniciar o container
          #   successThreshold: 1 # Quantidade de testes que devem ser realizadas para considerar que está Ok

          # readinessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080 # Porta do container, não é a porta do serviço
          #     # httpHeaders:
          #     # - name: x-api-key
          #     #   value: MyAwesomeApiKey
          #   periodSeconds: 10
          #   failureThreshold: 3 # Limite de erros para reiniciar o container
          #   timeoutSeconds: 2 # Timeout para considerar erro, lembrar que quando for integrada (consumir banco) precisa ser menos conservador
          #   successThreshold: 1 # Quantidade de testes que devem ser realizadas para considerar que está Ok
          #   initialDelaySeconds: 30  # Aumente para 30 segundos ou mais
          
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 8080 #Porta do container não é a porta do service
          #     # httpHeaders:
          #     # - name: x-api-key
          #     #   value: MyAwesomeApiKey
          #   periodSeconds: 5 # De quanto em quanto tempo para verificar
          #   failureThreshold: 3 # Limite de erros para reiniciar o container
          #   timeoutSeconds: 5 # Timeout para considerar erro, lembrar que quando for integrada (consumir banco) precisa ser menos conservador
          #   successThreshold: 1 # Quantidade de testes que devem ser realizadas para considerar que está Ok
          #   initialDelaySeconds: 10
          
          envFrom:
          - configMapRef:
              name: poc-pipeline-env
          - secretRef:
              name: poc-pipeline-secret
          volumeMounts:
            - mountPath: "/app/Source"
              name: config
      volumes:
        - name: config
          configMap:
            name: configmap-content
            items:
            - key: "fileContent"
              path: "disclaimer.txt"
